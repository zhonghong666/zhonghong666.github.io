<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java虚拟机字节码指令表</title>
      <link href="2020/12/28/java-xu-ni-ji-zi-jie-ma-zhi-ling-biao/"/>
      <url>2020/12/28/java-xu-ni-ji-zi-jie-ma-zhi-ling-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="Java虚拟机字节码指令表"><a href="#Java虚拟机字节码指令表" class="headerlink" title="Java虚拟机字节码指令表"></a>Java虚拟机字节码指令表</h1><table><thead><tr><th>字节码</th><th>助记符</th><th>含义</th></tr></thead><tbody><tr><td>0x00</td><td>nop</td><td>什么都不做</td></tr><tr><td>0x01</td><td>aconst_null</td><td>将 null 推送至栈顶</td></tr><tr><td>0x02</td><td>iconst_m1</td><td>将 int 型 -1 推送至栈顶</td></tr><tr><td>0x03</td><td>iconst_0</td><td>将 int 型 0 推送至栈顶</td></tr><tr><td>0x04</td><td>iconst_1</td><td>将 int 型 1 推送至栈顶</td></tr><tr><td>0x05</td><td>iconst_2</td><td>将 int 型 2 推送至栈顶</td></tr><tr><td>0x06</td><td>iconst_3</td><td>将 int 型 3 推送至栈顶</td></tr><tr><td>0x07</td><td>iconst_4</td><td>将 int 型 4 推送至栈顶</td></tr><tr><td>0x08</td><td>iconst_5</td><td>将 int 型 5 推送至栈顶</td></tr><tr><td>0x09</td><td>lconst_0</td><td>将 long 型 0 推送至栈顶</td></tr><tr><td>0x0a</td><td>lconst_1</td><td>将 long 型 1 推送至栈顶</td></tr><tr><td>0x0b</td><td>fconst_0</td><td>将 float 型 0 推送至栈顶</td></tr><tr><td>0x0c</td><td>fconst_1</td><td>将 float 型 1 推送至栈顶</td></tr><tr><td>0x0d</td><td>fconst_2</td><td>将 float 型 2 推送至栈顶</td></tr><tr><td>0x0e</td><td>dconst_0</td><td>将 double 型 0 推送至栈顶</td></tr><tr><td>0x0f</td><td>dconst_1</td><td>将 double 型 1 推送至栈顶</td></tr><tr><td>0x10</td><td>bipush</td><td>将单字节的常量值 ( -128 ~ 127 ) 推送至栈顶</td></tr><tr><td>0x11</td><td>sipush</td><td>将一个短整型常量值 ( -32768 ~ 32767 ) 推送至栈顶</td></tr><tr><td>0x12</td><td>ldc</td><td>将 int, float 或 String 型常量值从常量池中推送至栈顶</td></tr><tr><td>0x13</td><td>ldc_w</td><td>将 int, float 或 String 型常量值从常量池中推送至栈顶（宽索引）</td></tr><tr><td>0x14</td><td>ldc2_w</td><td>将 long 或 double 型常量值从常量池中推送至栈顶（宽索引）</td></tr><tr><td>0x15</td><td>iload</td><td>将指定的 int 型本地变量推送至栈顶</td></tr><tr><td>0x16</td><td>lload</td><td>将指定的 long 型本地变量推送至栈顶</td></tr><tr><td>0x17</td><td>fload</td><td>将指定的 float 型本地变量推送至栈顶</td></tr><tr><td>0x18</td><td>dload</td><td>将指定的 double 型本地变量推送至栈顶</td></tr><tr><td>0x19</td><td>aload</td><td>将指定的引用类型本地变量推送至栈顶</td></tr><tr><td>0x1a</td><td>iload_0</td><td>将第一个 int 型本地变量推送至栈顶</td></tr><tr><td>0x1b</td><td>iload_1</td><td>将第二个 int 型本地变量推送至栈顶</td></tr><tr><td>0x1c</td><td>iload_2</td><td>将第三个 int 型本地变量推送至栈顶</td></tr><tr><td>0x1d</td><td>iload_3</td><td>将第四个 int 型本地变量推送至栈顶</td></tr><tr><td>0x1e</td><td>lload_0</td><td>将第一个 long 型本地变量推送至栈顶</td></tr><tr><td>0x1f</td><td>lload_1</td><td>将第二个 long 型本地变量推送至栈顶</td></tr><tr><td>0x20</td><td>lload_2</td><td>将第三个 long 型本地变量推送至栈顶</td></tr><tr><td>0x21</td><td>lload_3</td><td>将第四个 long 型本地变量推送至栈顶</td></tr><tr><td>0x22</td><td>fload_0</td><td>将第一个 float 型本地变量</td></tr><tr><td>0x23</td><td>fload_1</td><td>将第二个 float 型本地变量</td></tr><tr><td>0x24</td><td>fload_2</td><td>将第三个 float 型本地变量</td></tr><tr><td>0x25</td><td>fload_3</td><td>将第四个 float 型本地变量</td></tr><tr><td>0x26</td><td>dload_0</td><td>将第一个 double 型本地变量</td></tr><tr><td>0x27</td><td>dload_1</td><td>将第二个 double 型本地变量</td></tr><tr><td>0x28</td><td>dload_2</td><td>将第三个 double 型本地变量</td></tr><tr><td>0x29</td><td>dload_3</td><td>将第四个 double 型本地变量</td></tr><tr><td>0x2a</td><td>aload_0</td><td>将第一个引用类型本地变量</td></tr><tr><td>0x2b</td><td>aload_1</td><td>将第二个引用类型本地变量</td></tr><tr><td>0x2c</td><td>aload_2</td><td>将第三个引用类型本地变量</td></tr><tr><td>0x2d</td><td>aload_3</td><td>将第四个引用类型本地变量</td></tr><tr><td>0x2e</td><td>iaload</td><td>将 int 型数组指定索引的值推送至栈顶</td></tr><tr><td>0x2f</td><td>laload</td><td>将 long 型数组指定索引的值推送至栈顶</td></tr><tr><td>0x30</td><td>faload</td><td>将 float 型数组指定索引的值推送至栈顶</td></tr><tr><td>0x31</td><td>daload</td><td>将 double 型数组指定索引的值推送至栈顶</td></tr><tr><td>0x32</td><td>aaload</td><td>将引用型数组指定索引的值推送至栈顶</td></tr><tr><td>0x33</td><td>baload</td><td>将 boolean 或 byte 型数组指定索引的值推送至栈顶</td></tr><tr><td>0x34</td><td>caload</td><td>将 char 型数组指定索引的值推送至栈顶</td></tr><tr><td>0x35</td><td>saload</td><td>将 short 型数组指定索引的值推送至栈顶</td></tr><tr><td>0x36</td><td>istore</td><td>将栈顶 int 型数值存入指定本地变量</td></tr><tr><td>0x37</td><td>lstore</td><td>将栈顶 long 型数值存入指定本地变量</td></tr><tr><td>0x38</td><td>fstore</td><td>将栈顶 float 型数值存入指定本地变量</td></tr><tr><td>0x39</td><td>dstore</td><td>将栈顶 double 型数值存入指定本地变量</td></tr><tr><td>0x3a</td><td>astore</td><td>将栈顶引用型数值存入指定本地变量</td></tr><tr><td>0x3b</td><td>istore_0</td><td>将栈顶 int 型数值存入第一个本地变量</td></tr><tr><td>0x3c</td><td>istore_1</td><td>将栈顶 int 型数值存入第二个本地变量</td></tr><tr><td>0x3d</td><td>istore_2</td><td>将栈顶 int 型数值存入第三个本地变量</td></tr><tr><td>0x3e</td><td>istore_3</td><td>将栈顶 int 型数值存入第四个本地变量</td></tr><tr><td>0x3f</td><td>lstore_0</td><td>将栈顶 long 型数值存入第一个本地变量</td></tr><tr><td>0x40</td><td>lstore_1</td><td>将栈顶 long 型数值存入第二个本地变量</td></tr><tr><td>0x41</td><td>lstore_2</td><td>将栈顶 long 型数值存入第三个本地变量</td></tr><tr><td>0x42</td><td>lstore_3</td><td>将栈顶 long 型数值存入第四个本地变量</td></tr><tr><td>0x43</td><td>fstore_0</td><td>将栈顶 float 型数值存入第一个本地变量</td></tr><tr><td>0x44</td><td>fstore_1</td><td>将栈顶 float 型数值存入第二个本地变量</td></tr><tr><td>0x45</td><td>fstore_2</td><td>将栈顶 float 型数值存入第三个本地变量</td></tr><tr><td>0x46</td><td>fstore_3</td><td>将栈顶 float 型数值存入第四个本地变量</td></tr><tr><td>0x47</td><td>dstore_0</td><td>将栈顶 double 型数值存入第一个本地变量</td></tr><tr><td>0x48</td><td>dstore_1</td><td>将栈顶 double 型数值存入第二个本地变量</td></tr><tr><td>0x49</td><td>dstore_2</td><td>将栈顶 double 型数值存入第三个本地变量</td></tr><tr><td>0x4a</td><td>dstore_3</td><td>将栈顶 double 型数值存入第四个本地变量</td></tr><tr><td>0x4b</td><td>astore_0</td><td>将栈顶引用型数值存入第一个本地变量</td></tr><tr><td>0x4c</td><td>astore_1</td><td>将栈顶引用型数值存入第二个本地变量</td></tr><tr><td>0x4d</td><td>astore_2</td><td>将栈顶引用型数值存入第三个本地变量</td></tr><tr><td>0x4e</td><td>astore_3</td><td>将栈顶引用型数值存入第四个本地变量</td></tr><tr><td>0x4f</td><td>iastore</td><td>将栈顶 int 型数值存入指定数组的指定索引位置</td></tr><tr><td>0x50</td><td>lastore</td><td>将栈顶 long 型数值存入指定数组的指定索引位置</td></tr><tr><td>0x51</td><td>fastore</td><td>将栈顶 float 型数值存入指定数组的指定索引位置</td></tr><tr><td>0x52</td><td>dastore</td><td>将栈顶 double 型数值存入指定数组的指定索引位置</td></tr><tr><td>0x53</td><td>aastore</td><td>将栈顶引用型数值存入指定数组的指定索引位置</td></tr><tr><td>0x54</td><td>bastore</td><td>将栈顶 boolean 或 byte 型数值存入指定数组的指定索引位置</td></tr><tr><td>0x55</td><td>castore</td><td>将栈顶 char 型数值存入指定数组的指定索引位置</td></tr><tr><td>0x56</td><td>sastore</td><td>将栈顶 short 型数值存入指定数组的指定索引位置</td></tr><tr><td>0x57</td><td>pop</td><td>将栈顶数值弹出 (数值不能是 long 或 double 类型的)</td></tr><tr><td>0x58</td><td>pop2</td><td>将栈顶的一个（ long 或 double 类型的)或两个数值弹出（其它）</td></tr><tr><td>0x59</td><td>dup</td><td>复制栈顶数值并将复制值压入栈顶</td></tr><tr><td>0x5a</td><td>dup_x1</td><td>复制栈顶数值并将两个复制值压入栈顶</td></tr><tr><td>0x5b</td><td>dup_x2</td><td>复制栈顶数值并将三个（或两个）复制值压入栈顶</td></tr><tr><td>0x5c</td><td>dup2</td><td>复制栈顶一个（ long 或 double 类型的)或两个（其它）数值并将复制值压入栈顶</td></tr><tr><td>0x5d</td><td>dup2_x1</td><td>dup_x1 指令的双倍版本</td></tr><tr><td>0x5e</td><td>dup2_x2</td><td>dup_x2 指令的双倍版本</td></tr><tr><td>0x5f</td><td>swap</td><td>将栈最顶端的两个数值 互换 (数值不能是 long 或 double 类型的)</td></tr><tr><td>0x60</td><td>iadd</td><td>将栈顶 两 int 型数值 相加 并将结果压入栈顶</td></tr><tr><td>0x61</td><td>ladd</td><td>将栈顶 两 long 型数值 相加 并将结果压入栈顶</td></tr><tr><td>0x62</td><td>fadd</td><td>将栈顶 两 float 型数值 相加 并将结果压入栈顶</td></tr><tr><td>0x63</td><td>dadd</td><td>将栈顶 两 double 型数值 相加 并将结果压入栈顶</td></tr><tr><td>0x64</td><td>is</td><td>将栈顶 两 int 型数值 相减 并将结果压入栈顶</td></tr><tr><td>0x65</td><td>ls</td><td>将栈顶 两 long 型数值 相减 并将结果压入栈顶</td></tr><tr><td>0x66</td><td>fs</td><td>将栈顶 两 float 型数值 相减 并将结果压入栈顶</td></tr><tr><td>0x67</td><td>ds</td><td>将栈顶 两 double 型数值 相减 并将结果压入栈顶</td></tr><tr><td>0x68</td><td>imul</td><td>将栈顶 两 int 型数值 相乘 并将结果压入栈顶</td></tr><tr><td>0x69</td><td>lmul</td><td>将栈顶 两 long 型数值 相乘 并将结果压入栈顶</td></tr><tr><td>0x6a</td><td>fmul</td><td>将栈顶 两 float 型数值 相乘 并将结果压入栈顶</td></tr><tr><td>0x6b</td><td>dmul</td><td>将栈顶 两 double 型数值 相乘 并将结果压入栈顶</td></tr><tr><td>0x6c</td><td>idiv</td><td>将栈顶 两 int 型数值 相除 并将结果压入栈顶</td></tr><tr><td>0x6d</td><td>ldiv</td><td>将栈顶 两 long 型数值 相除 并将结果压入栈顶</td></tr><tr><td>0x6e</td><td>fdiv</td><td>将栈顶 两 float 型数值 相除 并将结果压入栈顶</td></tr><tr><td>0x6f</td><td>ddiv</td><td>将栈顶 两 double 型数值 相除 并将结果压入栈顶</td></tr><tr><td>0x70</td><td>irem</td><td>将栈顶 两 int 型数值作 取模 运算并将结果压入栈顶</td></tr><tr><td>0x71</td><td>lrem</td><td>将栈顶 两 long 型数值作 取模 运算并将结果压入栈顶</td></tr><tr><td>0x72</td><td>frem</td><td>将栈顶 两 float 型数值作 取模 运算并将结果压入栈顶</td></tr><tr><td>0x73</td><td>drem</td><td>将栈顶 两 double 型数值作 取模 运算并将结果压入栈顶</td></tr><tr><td>0x74</td><td>ineg</td><td>将栈顶 int 型数值 取负 并将结果压入栈顶</td></tr><tr><td>0x75</td><td>lneg</td><td>将栈顶 long 型数值 取负 并将结果压入栈顶</td></tr><tr><td>0x76</td><td>fneg</td><td>将栈顶 floa t型数值 取负 并将结果压入栈顶</td></tr><tr><td>0x77</td><td>dneg</td><td>将栈顶 double 型数值 取负 并将结果压入栈顶</td></tr><tr><td>0x78</td><td>ishl</td><td>将 int 型数值 左移位指定位数 并将结果压入栈顶</td></tr><tr><td>0x79</td><td>lshl</td><td>将 long 型数值 左移位指定位数 并将结果压入栈顶</td></tr><tr><td>0x7a</td><td>ishr</td><td>将 int 型数值 右（符号）移位指定位数 并将结果压入栈顶</td></tr><tr><td>0x7b</td><td>lshr</td><td>将 long 型数值 右（符号）移位指定位数 并将结果压入栈顶</td></tr><tr><td>0x7c</td><td>iushr</td><td>将 int 型数值 右（无符号）移位指定位数 并将结果压入栈顶</td></tr><tr><td>0x7d</td><td>lushr</td><td>将 long 型数值 右（无符号）移位指定位数 并将结果压入栈顶</td></tr><tr><td>0x7e</td><td>iand</td><td>将栈顶 两 int 型数值作 “按位与” 并将结果压入栈顶</td></tr><tr><td>0x7f</td><td>land</td><td>将栈顶 两 long 型数值作 “按位与” 并将结果压入栈顶</td></tr><tr><td>0x80</td><td>ior</td><td>将栈顶 两 int 型数值作 “按位或” 并将结果压入栈顶</td></tr><tr><td>0x81</td><td>lor</td><td>将栈顶 两 long 型数值作 “按位或” 并将结果压入栈顶</td></tr><tr><td>0x82</td><td>ixor</td><td>将栈顶 两 int 型数值作 “按位异或” 并将结果压入栈顶</td></tr><tr><td>0x83</td><td>lxor</td><td>将栈顶 两 long 型数值作“ 按位异或” 并将结果压入栈顶</td></tr><tr><td>0x84</td><td>iinc</td><td>将指定 int 型变量增加指定值（i++,  i–-,  i += 2）</td></tr><tr><td>0x85</td><td>i2l</td><td>将栈顶 int 型数值 强制转换成 long 型数值 并将结果压入栈顶</td></tr><tr><td>0x86</td><td>i2f</td><td>将栈顶 int 型数值 强制转换成 float 型数值 并将结果压入栈顶</td></tr><tr><td>0x87</td><td>i2d</td><td>将栈顶 int 型数值 强制转换成 double 型数值 并将结果压入栈顶</td></tr><tr><td>0x88</td><td>l2i</td><td>将栈顶 long 型数值 强制转换成 int 型数值 并将结果压入栈顶</td></tr><tr><td>0x89</td><td>l2f</td><td>将栈顶 long 型数值 强制转换成 float 型数值 并将结果压入栈顶</td></tr><tr><td>0x8a</td><td>l2d</td><td>将栈顶 long 型数值 强制转换成 double 型数值 并将结果压入栈顶</td></tr><tr><td>0x8b</td><td>f2i</td><td>将栈顶 float 型数值 强制转换成 int 型数值 并将结果压入栈顶</td></tr><tr><td>0x8c</td><td>f2l</td><td>将栈顶 floa t型数值 强制转换成 long 型数值 并将结果压入栈顶</td></tr><tr><td>0x8d</td><td>f2d</td><td>将栈顶 float 型数值 强制转换成 double 型数值 并将结果压入栈顶</td></tr><tr><td>0x8e</td><td>d2i</td><td>将栈顶 double 型数值 强制转换成 int 型数值 并将结果压入栈顶</td></tr><tr><td>0x8f</td><td>d2l</td><td>将栈顶 double 型数值 强制转换成 long 型数值 并将结果压入栈顶</td></tr><tr><td>0x90</td><td>d2f</td><td>将栈顶 double 型数值 强制转换成 float 型数值 并将结果压入栈顶</td></tr><tr><td>0x91</td><td>i2b</td><td>将栈顶 int 型数值 强制转换成 byte 型数值 并将结果压入栈顶</td></tr><tr><td>0x92</td><td>i2c</td><td>将栈顶 int 型数值 强制转换成 char 型数值 并将结果压入栈顶</td></tr><tr><td>0x93</td><td>i2s</td><td>将栈顶 int 型数值 强制转换成 short 型数值 并将结果压入栈顶</td></tr><tr><td>0x94</td><td>lcmp</td><td>比较栈顶 两 long 型数值大小，并将结果（1，0，-1）压入栈顶</td></tr><tr><td>0x95</td><td>fcmpl</td><td>比较栈顶 两 float 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为NaN 时，将 -1 压入栈顶</td></tr><tr><td>0x96</td><td>fcmpg</td><td>比较栈顶 两 float 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为         NaN 时，将 1 压入栈顶</td></tr><tr><td>0x97</td><td>dcmpl</td><td>比较栈顶 两 double 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为 NaN 时，将 -1 压入栈顶</td></tr><tr><td>0x98</td><td>dcmpg</td><td>比较栈顶 两 double 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为 NaN 时，将 1 压入栈顶</td></tr><tr><td>0x99</td><td>ifeq</td><td>当栈顶 int 型数值 等于 0 时跳转</td></tr><tr><td>0x9a</td><td>ifne</td><td>当栈顶 int 型数值 不等于 0 时跳转</td></tr><tr><td>0x9b</td><td>iflt</td><td>当栈顶 int 型数值 小于 0 时跳转</td></tr><tr><td>0x9c</td><td>ifge</td><td>当栈顶 in t型数值 大于等于 0 时跳转</td></tr><tr><td>0x9d</td><td>ifgt</td><td>当栈顶 int 型数值 大于 0 时跳转</td></tr><tr><td>0x9e</td><td>ifle</td><td>当栈顶 int 型数值 小于等于 0 时跳转</td></tr><tr><td>0x9f</td><td>if_icmpeq</td><td>比较栈顶 两 int 型数值大小，当结果 等于 0 时跳转</td></tr><tr><td>0xa0</td><td>if_icmpne</td><td>比较栈顶 两 int 型数值大小，当结果 不等于 0 时跳转</td></tr><tr><td>0xa1</td><td>if_icmplt</td><td>比较栈顶 两 int 型数值大小，当结果 小于 0 时跳转</td></tr><tr><td>0xa2</td><td>if_icmpge</td><td>比较栈顶 两 int 型数值大小，当结果 大于等于 0 时跳转</td></tr><tr><td>0xa3</td><td>if_icmpgt</td><td>比较栈顶 两 int 型数值大小，当结果 大于 0 时跳转</td></tr><tr><td>0xa4</td><td>if_icmple</td><td>比较栈顶 两 int 型数值大小，当结果 小于等于 0 时跳转</td></tr><tr><td>0xa5</td><td>if_acmpeq</td><td>比较栈顶 两 引用 型数值，当结果 相等 时跳转</td></tr><tr><td>0xa6</td><td>if_acmpne</td><td>比较栈顶 两 引用 型数值，当结果 不相等 时跳转</td></tr><tr><td>0xa7</td><td>goto</td><td>无条件跳转</td></tr><tr><td>0xa8</td><td>jsr</td><td>跳转至指定 16位 offse t位置，并将 jsr 下一条指令地址压入栈顶</td></tr><tr><td>0xa9</td><td>ret</td><td>返回至本地变量</td></tr><tr><td>0xaa</td><td>tableswitch</td><td>用于 switch 条件跳转，case 值连续（可变长度指令）</td></tr><tr><td>0xab</td><td>lookupswitch</td><td>用于 switch 条件跳转，case 值不连续（可变长度指令）</td></tr><tr><td>0xac</td><td>ireturn</td><td>从当前方法返回 int</td></tr><tr><td>0xad</td><td>lreturn</td><td>从当前方法返回 long</td></tr><tr><td>0xae</td><td>freturn</td><td>从当前方法返回 float</td></tr><tr><td>0xaf</td><td>dreturn</td><td>从当前方法返回 double</td></tr><tr><td>0xb0</td><td>areturn</td><td>从当前方法返回对象引用</td></tr><tr><td>0xb1</td><td>return</td><td>从当前方法返回 void</td></tr><tr><td>0xb2</td><td>getstatic</td><td>获取指定类的静态域，并将其值压入栈顶</td></tr><tr><td>0xb3</td><td>putstatic</td><td>为指定的类的静态域赋值</td></tr><tr><td>0xb4</td><td>getfield</td><td>获取指定类的实例域，并将其值压入栈顶</td></tr><tr><td>0xb5</td><td>putfield</td><td>为指定的类的实例域赋值</td></tr><tr><td>0xb6</td><td>invokevirtual</td><td>调用实例方法</td></tr><tr><td>0xb7</td><td>invokespecial</td><td>调用超类构造方法，实例初始化方法，私有方法</td></tr><tr><td>0xb8</td><td>invokestatic</td><td>调用静态方法</td></tr><tr><td>0xb9</td><td>invokeinterface</td><td>调用接口方法</td></tr><tr><td>0xba</td><td>–</td><td>无此指令，因为历史原因，该码点为未使用的保留码点</td></tr><tr><td>0xbb</td><td>new</td><td>创建一个对象，并将其引用值压入栈顶</td></tr><tr><td>0xbc</td><td>newarray</td><td>创建一个指定原始类型（如int, float, char…）的数组，并将其引用值压入栈顶</td></tr><tr><td>0xbd</td><td>anewarray</td><td>创建一个引用型（如类，接口，数组）的数组，并将其引用值压入栈顶</td></tr><tr><td>0xbe</td><td>arraylength</td><td>获得数组的长度值并压入栈顶</td></tr><tr><td>0xbf</td><td>athrow</td><td>将栈顶的异常抛出</td></tr><tr><td>0xc0</td><td>checkcast</td><td>检验类型转换，检验未通过将抛出 ClassCastException</td></tr><tr><td>0xc1</td><td>instanceof</td><td>检验对象是否是指定的类的实例，如果是将 1 压入栈顶，否则将 0 压入栈顶</td></tr><tr><td>0xc2</td><td>monitorenter</td><td>获得对象的锁，用于同步方法或同步块</td></tr><tr><td>0xc3</td><td>monitorexit</td><td>释放对象的锁，用于同步方法或同步块</td></tr><tr><td>0xc4</td><td>wide</td><td>用于修改其他指令的行为</td></tr><tr><td>0xc5</td><td>multianewarray</td><td>创建指定类型和指定维度的多维数组（执行该指令时，操作栈中必须包含各维度的长度值），并将其引用值压入栈顶</td></tr><tr><td>0xc6</td><td>ifnull</td><td>为 null 时跳转</td></tr><tr><td>0xc7</td><td>ifnonnull</td><td>不为 null 时跳转</td></tr><tr><td>0xc8</td><td>goto_w</td><td>无条件跳转（宽索引）</td></tr><tr><td>0xc9</td><td>jsr_w</td><td>跳转至指定 32位 offset 位置，并将 jsr_w 下一条指令地址压入栈顶</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat源码调试</title>
      <link href="2020/10/16/tomcat-yuan-ma-diao-shi/"/>
      <url>2020/10/16/tomcat-yuan-ma-diao-shi/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tomcat源码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo指令</title>
      <link href="2020/10/16/hexo-zhi-ling/"/>
      <url>2020/10/16/hexo-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="全局安装Hexo"><a href="#全局安装Hexo" class="headerlink" title="全局安装Hexo"></a>全局安装Hexo</h1><pre class="line-numbers language-shell"><code class="language-shell">npm install -g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo init [folder]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><p>该命令是一个快捷方式，运行以下步骤:</p><ol><li>Git克隆hexo-starter，将hexo-theme-landscape包含到当前目录或指定的目标文件夹中。</li><li>使用包管理器安装依赖项:纱线1、pnpm或npm，以已安装的为准;如果安装了多个，则列出优先级。npm默认与Node.js绑定。</li></ol><h1 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h1><pre class="line-numbers language-shell"><code class="language-shell"># [layout] 为布局，可选项为 `post`、`page`、`draft`，这将决定文章所在文件路径。# <title> 为文章标题# 如 hexo new post 除了帅气，我还有啥！hexo new [layout] <title><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>该命令还可添加自选参数：</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--path</code></td><td>自定义新文章的路径</td></tr><tr><td><code>-r</code>, <code>--replace</code></td><td>如果存在同名文章，将其替换</td></tr><tr><td><code>-s</code>, <code>--slug</code></td><td>文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p><pre class="line-numbers language-shell"><code class="language-shell">hexo new page --path about/me "About me"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>"About me"</code></p><p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p><pre class="line-numbers language-shell"><code class="language-shell">hexo new page --path about/me<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>"page"</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p><h1 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th><strong>选项</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>-d</code>, <code>--deploy</code></td><td>文件生成后立即部署网站</td></tr><tr><td><code>-w</code>, <code>--watch</code></td><td>监视文件变动</td></tr><tr><td><code>-b</code>, <code>--bail</code></td><td>生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td><code>-f</code>, <code>--force</code></td><td>强制重新生成文件<br>Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。<br>使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td><code>-c</code>, <code>--concurrency</code></td><td>最大同时生成文件的数量，默认无限制</td></tr></tbody></table><p>该命令可以简写为:</p><pre class="line-numbers language-shell"><code class="language-shell">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="发表草稿"><a href="#发表草稿" class="headerlink" title="发表草稿"></a>发表草稿</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo publish [layout] <filename><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--port</code></td><td>重设端口</td></tr><tr><td><code>-s</code>, <code>--static</code></td><td>只使用静态文件</td></tr><tr><td><code>-l</code>, <code>--log</code></td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h1 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th><strong>参数</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>-g</code>, <code>--generate</code></td><td>部署之前预先生成静态文件</td></tr><tr><td></td><td></td></tr></tbody></table><p>该命令可以简写为：</p><pre class="line-numbers language-shell"><code class="language-shell">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="渲染文件"><a href="#渲染文件" class="headerlink" title="渲染文件"></a>渲染文件</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo render <file1> [file2] ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-o</code>, <code>--output</code></td><td>设置输出路径</td></tr><tr><td></td><td></td></tr></tbody></table><h1 id="迁移内容"><a href="#迁移内容" class="headerlink" title="迁移内容"></a>迁移内容</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo migrate <type><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration" target="_blank" rel="noopener">迁移内容</a>。</p><h1 id="清除"><a href="#清除" class="headerlink" title="清除"></a>清除</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h1 id="列出网站资料"><a href="#列出网站资料" class="headerlink" title="列出网站资料"></a>列出网站资料</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo hexo list <type><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h1><pre class="line-numbers language-shell"><code class="language-shell">hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h1><h2 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h2><pre class="line-numbers language-shell"><code class="language-shell">hexo --safe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h2 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h2><pre class="line-numbers language-shell"><code class="language-shell">hexo --debug<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new" target="_blank" rel="noopener">提交调试信息到 GitHub</a>。</p><h2 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h2><pre class="line-numbers language-shell"><code class="language-shell">hexo --silent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>隐藏终端信息。</p><h2 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h2><pre class="line-numbers language-shell"><code class="language-shell"># 使用 custom.yml 代替默认的 _config.ymlhexo server --config custom.yml# 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高hexo generate --config custom.yml,custom2.json,custom3.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义配置文件的路径，指定这个参数后将不再使用默认的 <code>_config.yml</code>。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p><pre class="line-numbers language-shell"><code class="language-shell"># 使用 custom.yml 代替默认的 _config.ymlhexo server --config custom.yml# 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.jsonhexo generate --config custom.yml,custom2.json,custom3.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p><h2 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h2><pre class="line-numbers language-shell"><code class="language-shell">hexo --draft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h2 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h2><pre class="line-numbers language-shell"><code class="language-shell">hexo --cwd /path/to/cwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>自定义当前工作目录（Current working directory）的路径。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker镜像文件制作</title>
      <link href="2020/07/17/docker-jing-xiang-wen-jian-zhi-zuo/"/>
      <url>2020/07/17/docker-jing-xiang-wen-jian-zhi-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="基于容器制作镜像"><a href="#基于容器制作镜像" class="headerlink" title="基于容器制作镜像"></a>基于容器制作镜像</h1><h1 id="基于镜像文件Dockerfile制作"><a href="#基于镜像文件Dockerfile制作" class="headerlink" title="基于镜像文件Dockerfile制作"></a>基于镜像文件Dockerfile制作</h1><pre class="line-numbers language-dockerfile"><code class="language-dockerfile"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Vue项目</title>
      <link href="2020/07/15/da-jian-vue-xiang-mu/"/>
      <url>2020/07/15/da-jian-vue-xiang-mu/</url>
      
        <content type="html"><![CDATA[<h1 id="配置Vue开发环境"><a href="#配置Vue开发环境" class="headerlink" title="配置Vue开发环境"></a>配置Vue开发环境</h1><h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><p>下载地址：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p><h1 id="vue-cli脚手架"><a href="#vue-cli脚手架" class="headerlink" title="vue-cli脚手架"></a>vue-cli脚手架</h1><blockquote><p>版本要求</p><p>node 8.9+</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">npm install -g @vue/cli# ORyarn global add @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>检查其版本是否正确：</p><pre class="line-numbers language-shell"><code class="language-shell">vue --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><pre class="line-numbers language-shell"><code class="language-shell">vue create vue-domo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>结合项目需求，规范了项目结构</p><pre><code>    ├──     ├── public  打包所需静态资源    └── src        ├── api     后端接口api请求目录        └── assets  项目静态资源            ├── css  css            └── img  图片资源        ├── components  公共组件        ├── config  开发相关配置            └── config.js   项目运行配置        ├── plugins  第三方插件相关配置            └── element.js   element ui配置        ├── utils  封装工具函数        ├── router  路由配置        ├── store  Vuex配置        ├── vendors  拆分打包配置        ├── view  页面文件            ├── common     公共模块            ├── module     模块            └── page       页面        └── tests  测试相关    └── vue.config.js VUE-CLI配置文件    └── server.js 本地服务器运行生产环境</code></pre><h1 id="配置vue-router"><a href="#配置vue-router" class="headerlink" title="配置vue-router"></a>配置vue-router</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">npm i vue-router -S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="新增-src-router-index-js"><a href="#新增-src-router-index-js" class="headerlink" title="新增 src/router/index.js"></a>新增 src/router/index.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  mode<span class="token punctuation">:</span> <span class="token string">'hash'</span><span class="token punctuation">,</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      redirect<span class="token punctuation">:</span> <span class="token string">'/home'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/home'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'Home'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/home/index.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/500'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'error_500'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/errorPage/500.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/401'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'error_401'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/errorPage/401.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'error_404'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/errorPage/404.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改-main-js"><a href="#修改-main-js" class="headerlink" title="修改 main.js"></a>修改 main.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span><span class="token punctuation">;</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入element-UI</span><span class="token keyword">import</span> <span class="token string">'./plugins/element.js'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入公共样式</span><span class="token keyword">import</span> <span class="token string">'@/assets/css/index.css'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 阻止启动生产消息</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    router<span class="token punctuation">,</span>    store<span class="token punctuation">,</span>    render<span class="token punctuation">:</span> h <span class="token operator">=</span><span class="token operator">></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="配置vuex"><a href="#配置vuex" class="headerlink" title="配置vuex"></a>配置vuex</h1><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">npm i vuex -S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="新增-src-store-index-js"><a href="#新增-src-store-index-js" class="headerlink" title="新增 src/store/index.js"></a>新增 src/store/index.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span><span class="token keyword">import</span> app <span class="token keyword">from</span> <span class="token string">'./module/app'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> debug <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">!==</span> <span class="token string">'production'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>    app  <span class="token punctuation">}</span><span class="token punctuation">,</span>  strict<span class="token punctuation">:</span> debug<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="整合Element-UI"><a href="#整合Element-UI" class="headerlink" title="整合Element UI"></a>整合Element UI</h1><h2 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">vue add element<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现选择全部引入还是按需引入，此时我们选择按需引入，Import on demand</p><p><img src="/2020/07/15/da-jian-vue-xiang-mu/.%5Cimg%5Celement.png" alt=""></p><p>然后选择zh-CN</p><p><img src="/2020/07/15/da-jian-vue-xiang-mu/zh-CN.png" alt=""></p><h2 id="如何按需引入"><a href="#如何按需引入" class="headerlink" title="如何按需引入"></a>如何按需引入</h2><p><img src="/2020/07/15/da-jian-vue-xiang-mu/load.png" alt=""></p><h1 id="使用axios"><a href="#使用axios" class="headerlink" title="使用axios"></a>使用axios</h1><h2 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i axios <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><img src="img/http.png" alt=""></p><h1 id="支持less"><a href="#支持less" class="headerlink" title="支持less"></a>支持less</h1><pre class="line-numbers language-shell"><code class="language-shell">npm install --save-dev less-loader@5.0.0npm install --save-dev less<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="启用gzip压缩"><a href="#启用gzip压缩" class="headerlink" title="启用gzip压缩"></a>启用gzip压缩</h1><h2 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev compression<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="新建-vue-config-js"><a href="#新建-vue-config-js" class="headerlink" title="新建 vue.config.js"></a>新建 vue.config.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// Begin 生成 gzip 压缩文件</span>config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>    <span class="token keyword">new</span> <span class="token class-name">CompressionWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        test<span class="token punctuation">:</span> productionGzipExtensions<span class="token punctuation">,</span>        threshold<span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//对超过10k的数据进行压缩</span>        deleteOriginalAssets<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//是否删除源文件</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="nginx-开启-gzip"><a href="#nginx-开启-gzip" class="headerlink" title="nginx 开启 gzip"></a>nginx 开启 gzip</h2><pre class="line-numbers language-shell"><code class="language-shell">http:{     gzip on;     gzip_static on;    gzip_buffers 4 16k;    gzip_comp_level 5;    gzip_types text/plain application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="代码拆分打包"><a href="#代码拆分打包" class="headerlink" title="代码拆分打包"></a>代码拆分打包</h1><p><img src="/2020/07/15/da-jian-vue-xiang-mu/code.png" alt=""></p><h1 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h1><h2 id="nginx反向代理"><a href="#nginx反向代理" class="headerlink" title="nginx反向代理"></a>nginx反向代理</h2><pre class="line-numbers language-shell"><code class="language-shell">server {    listen       80;    server_name  localhost;    ## 用户访问 localhost，则反向代理到https://www.ihuaben.com    location / {        root   html;        index  index.html index.htm;        proxy_pass https://www.ihuaben.com;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="前端设置服务器代理"><a href="#前端设置服务器代理" class="headerlink" title="前端设置服务器代理"></a>前端设置服务器代理</h2><p>修改 <code>vue.config.js</code></p><pre class="line-numbers language-javascript"><code class="language-javascript">devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>    proxy<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">'/api'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        target<span class="token punctuation">:</span> <span class="token string">'http://localhost:8083'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 代理域名 + 端口</span>        ws<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        changeOrigin<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        secure<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        pathRewrite<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token string">'^/api'</span><span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="服务端允许跨域"><a href="#服务端允许跨域" class="headerlink" title="服务端允许跨域"></a>服务端允许跨域</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleCORSFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest req<span class="token punctuation">,</span> ServletResponse res<span class="token punctuation">,</span> FilterChain chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        HttpServletResponse response <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletResponse<span class="token punctuation">)</span> res<span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Methods"</span><span class="token punctuation">,</span> <span class="token string">"POST, GET, OPTIONS, DELETE, HEAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Max-Age"</span><span class="token punctuation">,</span> <span class="token string">"3600"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span> <span class="token string">"access-control-allow-origin, authority, content-type, version-info, X-Requested-With"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Vue项目</title>
      <link href="2020/07/15/da-jian-vue-xiang-mu/da-jian-vue-xiang-mu/"/>
      <url>2020/07/15/da-jian-vue-xiang-mu/da-jian-vue-xiang-mu/</url>
      
        <content type="html"><![CDATA[<h1 id="配置Vue开发环境"><a href="#配置Vue开发环境" class="headerlink" title="配置Vue开发环境"></a>配置Vue开发环境</h1><h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><p>下载地址：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p><h1 id="vue-cli脚手架"><a href="#vue-cli脚手架" class="headerlink" title="vue-cli脚手架"></a>vue-cli脚手架</h1><blockquote><p>版本要求</p><p>node 8.9+</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">npm install -g @vue/cli# ORyarn global add @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>检查其版本是否正确：</p><pre class="line-numbers language-shell"><code class="language-shell">vue --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><pre class="line-numbers language-shell"><code class="language-shell">vue create vue-domo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>结合项目需求，规范了项目结构</p><pre><code>    ├──     ├── public  打包所需静态资源    └── src        ├── api     后端接口api请求目录        └── assets  项目静态资源            ├── css  css            └── img  图片资源        ├── components  公共组件        ├── config  开发相关配置            └── config.js   项目运行配置        ├── plugins  第三方插件相关配置            └── element.js   element ui配置        ├── utils  封装工具函数        ├── router  路由配置        ├── store  Vuex配置        ├── vendors  拆分打包配置        ├── view  页面文件            ├── common     公共模块            ├── module     模块            └── page       页面        └── tests  测试相关    └── vue.config.js VUE-CLI配置文件    └── server.js 本地服务器运行生产环境</code></pre><h1 id="配置vue-router"><a href="#配置vue-router" class="headerlink" title="配置vue-router"></a>配置vue-router</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">npm i vue-router -S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="新增-src-router-index-js"><a href="#新增-src-router-index-js" class="headerlink" title="新增 src/router/index.js"></a>新增 src/router/index.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  mode<span class="token punctuation">:</span> <span class="token string">'hash'</span><span class="token punctuation">,</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      redirect<span class="token punctuation">:</span> <span class="token string">'/home'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/home'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'Home'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/home/index.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/500'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'error_500'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/errorPage/500.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/401'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'error_401'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/errorPage/401.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'error_404'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/errorPage/404.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改-main-js"><a href="#修改-main-js" class="headerlink" title="修改 main.js"></a>修改 main.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span><span class="token punctuation">;</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入element-UI</span><span class="token keyword">import</span> <span class="token string">'./plugins/element.js'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入公共样式</span><span class="token keyword">import</span> <span class="token string">'@/assets/css/index.css'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 阻止启动生产消息</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    router<span class="token punctuation">,</span>    store<span class="token punctuation">,</span>    render<span class="token punctuation">:</span> h <span class="token operator">=</span><span class="token operator">></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="配置vuex"><a href="#配置vuex" class="headerlink" title="配置vuex"></a>配置vuex</h1><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">npm i vuex -S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="新增-src-store-index-js"><a href="#新增-src-store-index-js" class="headerlink" title="新增 src/store/index.js"></a>新增 src/store/index.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span><span class="token keyword">import</span> app <span class="token keyword">from</span> <span class="token string">'./module/app'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> debug <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">!==</span> <span class="token string">'production'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>    app  <span class="token punctuation">}</span><span class="token punctuation">,</span>  strict<span class="token punctuation">:</span> debug<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="整合Element-UI"><a href="#整合Element-UI" class="headerlink" title="整合Element UI"></a>整合Element UI</h1><h2 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">vue add element<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现选择全部引入还是按需引入，此时我们选择按需引入，Import on demand</p><p><img src="/2020/07/15/da-jian-vue-xiang-mu/da-jian-vue-xiang-mu/.%5Cimg%5Celement.png" alt=""></p><p>然后选择zh-CN</p><p><img src="/2020/07/15/da-jian-vue-xiang-mu/da-jian-vue-xiang-mu/zh-CN.png" alt=""></p><h2 id="如何按需引入"><a href="#如何按需引入" class="headerlink" title="如何按需引入"></a>如何按需引入</h2><p><img src="/2020/07/15/da-jian-vue-xiang-mu/da-jian-vue-xiang-mu/load.png" alt=""></p><h1 id="使用axios"><a href="#使用axios" class="headerlink" title="使用axios"></a>使用axios</h1><h2 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i axios <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><img src="img/http.png" alt=""></p><h1 id="支持less"><a href="#支持less" class="headerlink" title="支持less"></a>支持less</h1><pre class="line-numbers language-shell"><code class="language-shell">npm install --save-dev less-loader@5.0.0npm install --save-dev less<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="启用gzip压缩"><a href="#启用gzip压缩" class="headerlink" title="启用gzip压缩"></a>启用gzip压缩</h1><h2 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev compression<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="新建-vue-config-js"><a href="#新建-vue-config-js" class="headerlink" title="新建 vue.config.js"></a>新建 vue.config.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// Begin 生成 gzip 压缩文件</span>config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>    <span class="token keyword">new</span> <span class="token class-name">CompressionWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        test<span class="token punctuation">:</span> productionGzipExtensions<span class="token punctuation">,</span>        threshold<span class="token punctuation">:</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//对超过10k的数据进行压缩</span>        deleteOriginalAssets<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//是否删除源文件</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="nginx-开启-gzip"><a href="#nginx-开启-gzip" class="headerlink" title="nginx 开启 gzip"></a>nginx 开启 gzip</h2><pre class="line-numbers language-shell"><code class="language-shell">http:{     gzip on;     gzip_static on;    gzip_buffers 4 16k;    gzip_comp_level 5;    gzip_types text/plain application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="代码拆分打包"><a href="#代码拆分打包" class="headerlink" title="代码拆分打包"></a>代码拆分打包</h1><p><img src="/2020/07/15/da-jian-vue-xiang-mu/da-jian-vue-xiang-mu/code.png" alt=""></p><h1 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h1><h2 id="nginx反向代理"><a href="#nginx反向代理" class="headerlink" title="nginx反向代理"></a>nginx反向代理</h2><pre class="line-numbers language-shell"><code class="language-shell">server {    listen       80;    server_name  localhost;    ## 用户访问 localhost，则反向代理到https://www.ihuaben.com    location / {        root   html;        index  index.html index.htm;        proxy_pass https://www.ihuaben.com;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="前端设置服务器代理"><a href="#前端设置服务器代理" class="headerlink" title="前端设置服务器代理"></a>前端设置服务器代理</h2><p>修改 <code>vue.config.js</code></p><pre class="line-numbers language-javascript"><code class="language-javascript">devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>    proxy<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">'/api'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        target<span class="token punctuation">:</span> <span class="token string">'http://localhost:8083'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 代理域名 + 端口</span>        ws<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        changeOrigin<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        secure<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        pathRewrite<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token string">'^/api'</span><span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="服务端允许跨域"><a href="#服务端允许跨域" class="headerlink" title="服务端允许跨域"></a>服务端允许跨域</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleCORSFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest req<span class="token punctuation">,</span> ServletResponse res<span class="token punctuation">,</span> FilterChain chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        HttpServletResponse response <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletResponse<span class="token punctuation">)</span> res<span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Methods"</span><span class="token punctuation">,</span> <span class="token string">"POST, GET, OPTIONS, DELETE, HEAD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Max-Age"</span><span class="token punctuation">,</span> <span class="token string">"3600"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span> <span class="token string">"access-control-allow-origin, authority, content-type, version-info, X-Requested-With"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CAP定理</title>
      <link href="2020/07/11/cap-ding-li/"/>
      <url>2020/07/11/cap-ding-li/</url>
      
        <content type="html"><![CDATA[<blockquote><p>分布式系统的最大难点，就是各个节点的状态如何同步。CAP 定理是这方面的基本定理，也是理解分布式系统的起点。</p></blockquote><h2 id="分布式系统的三个指标"><a href="#分布式系统的三个指标" class="headerlink" title="分布式系统的三个指标"></a>分布式系统的三个指标</h2><p><img src="https://www.wangbase.com/blogimg/asset/201807/bg2018071607.jpg" alt=""></p><p>1998年，加州大学的计算机科学家 Eric Brewer 提出，分布式系统有三个指标。</p><ul><li>Consistency：一致性</li><li>Availability：可用性</li><li>Partition Tolerance：分区容错性</li></ul><p>Eric Brewer 说，这三个指标不可能同时做到。这个结论就叫做 CAP 定理。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 分布式系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger的配置及使用</title>
      <link href="2020/05/12/swagger-de-pei-zhi-ji-shi-yong/"/>
      <url>2020/05/12/swagger-de-pei-zhi-ji-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Swagger-介绍"><a href="#Swagger-介绍" class="headerlink" title="Swagger 介绍"></a>Swagger 介绍</h1><p>Swagger 用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</p><p>总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法、参数和模型紧密集成到服务器端的代码，允许 API 来始终保持同步。Swagger 让部署管理和使用功能强大的 API 从未如此简单。</p><a id="more"></a><h1 id="配置Swagger"><a href="#配置Swagger" class="headerlink" title="配置Swagger"></a>配置Swagger</h1><h2 id="添加Maven依赖"><a href="#添加Maven依赖" class="headerlink" title="添加Maven依赖"></a>添加Maven依赖</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- swagger --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-orm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-oxm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- swagger UI --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- swagger bootstrap ui --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.xiaoymin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>swagger-bootstrap-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.9.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Spring-MVC配置Swagger"><a href="#Spring-MVC配置Swagger" class="headerlink" title="Spring MVC配置Swagger"></a>Spring MVC配置Swagger</h2><h3 id="编写SwaggerConfig类"><a href="#编写SwaggerConfig类" class="headerlink" title="编写SwaggerConfig类"></a>编写SwaggerConfig类</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@EnableWebMvc</span><span class="token annotation punctuation">@EnableSwagger2</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableSwaggerBootstrapUI</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurationSupport</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">createRestApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.ihuaben.controller"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"author.ihuaben.com"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"接口描述"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//                .termsOfServiceUrl("http://127.0.0.1:8080/swagger-ui.html")</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"zhonghong"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"zhonghong@liangzishidai.cn"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编写SwaggerResourcesProvider的实现类"><a href="#编写SwaggerResourcesProvider的实现类" class="headerlink" title="编写SwaggerResourcesProvider的实现类"></a>编写SwaggerResourcesProvider的实现类</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Primary</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySwaggerResourceProvider</span> <span class="token keyword">implements</span> <span class="token class-name">SwaggerResourcesProvider</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String SWAGGER_URL <span class="token operator">=</span> <span class="token string">"/v2/api-docs"</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>SwaggerResource<span class="token operator">></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List resources <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">swaggerResource</span><span class="token punctuation">(</span><span class="token string">"book.ihuaben.com"</span><span class="token punctuation">,</span> SWAGGER_URL<span class="token punctuation">,</span> <span class="token string">"1.0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">swaggerResource</span><span class="token punctuation">(</span><span class="token string">"author.ihuaben.com"</span><span class="token punctuation">,</span> SWAGGER_URL<span class="token punctuation">,</span> <span class="token string">"1.0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">swaggerResource</span><span class="token punctuation">(</span><span class="token string">"function.ihuaben.com"</span><span class="token punctuation">,</span> SWAGGER_URL<span class="token punctuation">,</span> <span class="token string">"1.0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resources<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> SwaggerResource <span class="token function">swaggerResource</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> String location<span class="token punctuation">,</span> String version<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SwaggerResource swaggerResource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SwaggerResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        swaggerResource<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        swaggerResource<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>        swaggerResource<span class="token punctuation">.</span><span class="token function">setSwaggerVersion</span><span class="token punctuation">(</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> swaggerResource<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编辑Spring的xml配置文件"><a href="#编辑Spring的xml配置文件" class="headerlink" title="编辑Spring的xml配置文件"></a>编辑Spring的xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 使用 Swagger Restful API 文档时，添加此注解 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>default-servlet-handler</span> <span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!-- 拦截器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>interceptors</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>interceptor</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/**<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 将swagger的请求放行 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>exclude-mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/swagger*/**<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>exclude-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>exclude-mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/v2/**<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>exclude-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>exclude-mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/webjars/**<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>exclude-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.ihuaben.bridge.web.BaseInterceptor<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>interceptor</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加访问权限控制"><a href="#添加访问权限控制" class="headerlink" title="添加访问权限控制"></a>添加访问权限控制</h3><p>在web.xml中添加相应的Filter，添加如下内容</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--SwaggerBootstrapUi提供的Swagger增强功能,Filter过滤保护Swagger资源--></span><span class="token comment" spellcheck="true">&lt;!--生产环境Filter--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>swaggerProductionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.github.xiaoymin.swaggerbootstrapui.filter.ProductionSecurityFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>production<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>swaggerProductionFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--Swagger资源的Basic认证保护策略--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>swaggerSecurityBasic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.github.xiaoymin.swaggerbootstrapui.filter.SecurityBasicAuthFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--开启basic认证--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>enableBasicAuth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--用户名&amp;密码--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>userName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>ihuaben123@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>swaggerSecurityBasic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Spring-Boot配置Swagger"><a href="#Spring-Boot配置Swagger" class="headerlink" title="Spring Boot配置Swagger"></a>Spring Boot配置Swagger</h2><h3 id="编写SwaggerConfig类-1"><a href="#编写SwaggerConfig类-1" class="headerlink" title="编写SwaggerConfig类"></a>编写SwaggerConfig类</h3><p>与Spring MVC一致</p><p>然后就OK了。。。（Spring Boot就是如此简单）</p><h2 id="添加访问权限控制-1"><a href="#添加访问权限控制-1" class="headerlink" title="添加访问权限控制"></a>添加访问权限控制</h2><h3 id="1、环境权限配置"><a href="#1、环境权限配置" class="headerlink" title="1、环境权限配置"></a>1、环境权限配置</h3><p>在SwaggerConfig类上添加<code>@Profile</code>注解：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"dev"</span><span class="token punctuation">,</span><span class="token string">"test"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如以上配置，则只有在dev以及test环境有效，在生产环境不可访问。</p><h3 id="2、账户权限配置"><a href="#2、账户权限配置" class="headerlink" title="2、账户权限配置"></a>2、账户权限配置</h3><p>针对Swagger的资源接口,SwaggerBootstrapUi提供了简单的Basic认证功能（版本1.9+）。</p><p>配置yml文件：</p><pre class="line-numbers language-yml"><code class="language-yml">swagger:  production: false  basic:    enable: true    username: admin    password: 123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>切记swagger.production 不可设置为true，否则将屏蔽所有资源</p></blockquote><h1 id="多个微服务Swagger进行整合"><a href="#多个微服务Swagger进行整合" class="headerlink" title="多个微服务Swagger进行整合"></a>多个微服务Swagger进行整合</h1><h2 id="使用网关统一入口"><a href="#使用网关统一入口" class="headerlink" title="使用网关统一入口"></a>使用网关统一入口</h2><h3 id="编写SwaggerResourcesProvider的实现类-1"><a href="#编写SwaggerResourcesProvider的实现类-1" class="headerlink" title="编写SwaggerResourcesProvider的实现类"></a>编写SwaggerResourcesProvider的实现类</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 聚合各个服务的swagger接口 */</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySwaggerResourceProvider</span> <span class="token keyword">implements</span> <span class="token class-name">SwaggerResourcesProvider</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * swagger2默认的url后缀     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String SWAGGER2URL <span class="token operator">=</span> <span class="token string">"/v2/api-docs"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 网关路由     */</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> RouteLocator routeLocator<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 网关应用名称     */</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.application.name}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String self<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token function">MySwaggerResourceProvider</span><span class="token punctuation">(</span>RouteLocator routeLocator<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>routeLocator <span class="token operator">=</span> routeLocator<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>SwaggerResource<span class="token operator">></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>SwaggerResource<span class="token operator">></span> resources <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> routeHosts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 获取所有可用的host：serviceId</span>        routeLocator<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>route <span class="token operator">-</span><span class="token operator">></span> route<span class="token punctuation">.</span><span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>route <span class="token operator">-</span><span class="token operator">></span> <span class="token operator">!</span>self<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>route <span class="token operator">-</span><span class="token operator">></span> routeHosts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 记录已经添加过的server，存在同一个应用注册了多个服务在eureka上</span>        Set<span class="token operator">&lt;</span>String<span class="token operator">></span> dealed <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        routeHosts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>instance <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 拼接url</span>            String url <span class="token operator">=</span> <span class="token string">"/"</span> <span class="token operator">+</span> instance<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> SWAGGER2URL<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dealed<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                dealed<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>                SwaggerResource swaggerResource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SwaggerResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                swaggerResource<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>                swaggerResource<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>                resources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>swaggerResource<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resources<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><table><thead><tr><th>资源</th><th>说明</th></tr></thead><tbody><tr><td>/doc.html</td><td>SwaggerBootstrapUi提供的文档访问地址</td></tr><tr><td>/api-docs-ext</td><td>SwaggerBootstrapUi提供的增强接口地址</td></tr><tr><td>/swagger-resources</td><td>Springfox-Swagger提供的分组接口</td></tr><tr><td>/api-docs</td><td>Springfox-Swagger提供的分组实例详情接口</td></tr><tr><td>/swagger-ui.html</td><td>Springfox-Swagger提供的文档访问地址</td></tr><tr><td>/swagger-resources/configuration/ui</td><td>Springfox-Swagger提供</td></tr><tr><td>/swagger-resources/configuration/security</td><td>Springfox-Swagger提供</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker学习笔记</title>
      <link href="2020/05/08/docker-xue-xi-bi-ji/"/>
      <url>2020/05/08/docker-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-简介"><a href="#Docker-简介" class="headerlink" title="Docker 简介"></a>Docker 简介</h1><p>Docker本质上是一个采用虚拟化技术的容器，基于Linux容器进行再封装，使用户不用关心容器的管理，而简化应用操作。传统的虚拟化是基于硬件实现的，如果要部署10个应用，则需要创建10个虚拟机，而Docker是基于操作系统做的虚拟化，也就是复用本地主机的操作系统，部署运营10个应用时只需要起10个隔离的应用即可。</p><p><img src="/2020/05/08/docker-xue-xi-bi-ji/docker.png" alt=""></p><a id="more"></a><h2 id="Docker-优点"><a href="#Docker-优点" class="headerlink" title="Docker 优点"></a>Docker 优点</h2><ul><li><p>更快速的交付和部署：Docker 容器很轻很快！容器的启动时间是秒级的，大量地节约开发、测试、部署的时间。</p></li><li><p>更高效的虚拟化：Docker 容器的运行不需要额外的 hypervisor 支持，它是内核级的虚拟化，因此可以实现更高的性能和效率。</p></li><li><p>更轻松的迁移和扩展： Docker 容器几乎可以在任意的平台上运行，包括物理机、虚拟机、公有云、私有云、个人电脑、服务器等。 这种兼容性可以让用户把一个应用程序从一个平台直接迁移到另外一个。</p></li><li><p>更简单的管理：使用 Docker，只需要小小的修改，就可以替代以往大量的更新工作。所有的修改都以增量的方式被分发和更新，从而实现自动化并且高效的管理。</p></li></ul><h2 id="对比传统虚拟机总结"><a href="#对比传统虚拟机总结" class="headerlink" title="对比传统虚拟机总结"></a>对比传统虚拟机总结</h2><table><thead><tr><th>特性</th><th>容器</th><th>虚拟机</th></tr></thead><tbody><tr><td>启动</td><td>秒级</td><td>分钟级</td></tr><tr><td>硬盘使用</td><td>一般为MB</td><td>一般为GB</td></tr><tr><td>性能</td><td>接近原生</td><td>弱于</td></tr><tr><td>系统支持量</td><td>单机支持上千个容器</td><td>一般几十个</td></tr></tbody></table><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>Docker包含三个基本概念：</p><ul><li>镜像（Image）</li><li>容器（Container）</li><li>仓库（Repository）</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下搭建Flutter开发环境</title>
      <link href="2020/03/22/linux-xia-da-jian-flutter-kai-fa-huan-jing/"/>
      <url>2020/03/22/linux-xia-da-jian-flutter-kai-fa-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="认识Flutter"><a href="#认识Flutter" class="headerlink" title="认识Flutter"></a>认识Flutter</h1><p>Flutter是谷歌的移原生动UI框架，可以快速在IOS和Android上构建高质量的原生用户界面。Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。</p><p>github：<a href="https://github.com/flutter/flutter.git" target="_blank" rel="noopener">https://github.com/flutter/flutter.git</a></p><h2 id="主流框架对比"><a href="#主流框架对比" class="headerlink" title="主流框架对比"></a>主流框架对比</h2><ul><li>Cordova：基于网页技术进行包装，利用插件的形式开发移动应用，性能和体验不太好。</li><li>RN（React Native）：将View编译成原生HTML5高很多，但是它也有效率问题，RN的渲染机制是基于前端框架的考虑，复杂的UI渲染是需要依赖多个view叠加。比如：我们渲染一个复杂的ListView，每一个小的控件都是一个native的view，然后相互组合叠加，如果此时我们的list需要滑动刷新，将会有很多个对象需要渲染。</li><li>Flutter：吸收了前两者的教训之后，在渲染技术上选择自己实现GDI，由于有更好的可控性，使用了新的语言Dart，避免了RN的那种通过桥接器与JavaScript通讯导致效率低下的问题，所以在性能方面比RN更高一筹。有经验的开发者可以打开Android手机开发者选项里面的显示边界布局，发现Flutter的布局是一个整体，说明Flutter没有使用原生控件进行渲染。</li></ul><a id="more"></a><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>跨平台</li><li>原生用户界面</li><li>开源免费</li><li>120fps超高性能：Flutter采用GPU渲染技术，所以性能极高。RN的性能只能达到60fps。</li></ul><h1 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h1><h2 id="下载Flutter-SDK"><a href="#下载Flutter-SDK" class="headerlink" title="下载Flutter SDK"></a>下载Flutter SDK</h2><p>地址：<a href="https://flutter.dev/docs/get-started/install/linux" target="_blank" rel="noopener">https://flutter.dev/docs/get-started/install/linux</a></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo vim /etc/profileexport FLUTTER_HOME=/opt/flutterexport PATH=$FLUTTER_HOME/bin:$PATHsource /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装Android-Studio"><a href="#安装Android-Studio" class="headerlink" title="安装Android Studio"></a>安装Android Studio</h2><p>下载地址：<a href="http://www.android-studio.org/" target="_blank" rel="noopener">http://www.android-studio.org/</a></p><ul><li>打开Android Studio下载Android SDK</li></ul><p><img src="https://flutter.dev/assets/get-started/android/android-sdk-tools-7a3eaa161678e404dc0c570cc0f4921944a3413586bad47b5e1f585ddfefada0.png" alt="img"></p><p>一定要确保下载了上图所示的Tools</p><ul><li>安装Flutter插件</li><li>安装AVD虚拟机</li></ul><h2 id="检查开发环境"><a href="#检查开发环境" class="headerlink" title="检查开发环境"></a>检查开发环境</h2><pre class="line-numbers language-shell"><code class="language-shell">flutter doctor --android-licenses //允许协议（android-licenses）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Pub源配置"><a href="#Pub源配置" class="headerlink" title="Pub源配置"></a>Pub源配置</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo vim /etc/profileexport PUB_HOSTED_URL=https://pub.flutter-io.cnexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cnsource /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="VSCode玩转Flutter"><a href="#VSCode玩转Flutter" class="headerlink" title="VSCode玩转Flutter"></a>VSCode玩转Flutter</h1><ul><li><p>安装Flutter插件</p></li><li><p>开启虚拟机</p><pre class="line-numbers language-shell"><code class="language-shell">$HOME/Android/Sdk/emulator/emulator -netdelay none -netspeed full -avd 虚拟机名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>-netdelay none：设置模拟器的网络延迟时间，默认为none，就是没有延迟。</li><li>-netspeed full：设置网络加速值，full代表全速。</li></ul></li><li><p>开启预览</p><pre class="line-numbers language-shell"><code class="language-shell">flutter run<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POI导出复杂结构</title>
      <link href="2019/12/08/poi-dao-chu-fu-za-jie-gou/"/>
      <url>2019/12/08/poi-dao-chu-fu-za-jie-gou/</url>
      
        <content type="html"><![CDATA[<h2 id="POI介绍"><a href="#POI介绍" class="headerlink" title="POI介绍"></a>POI介绍</h2><p>​     Apache POI是Apache软件基金会的开源项目，POI提供API给Java程序对Microsoft Office格式档案读和写的功能 。</p><h2 id="添加maven依赖"><a href="#添加maven依赖" class="headerlink" title="添加maven依赖"></a>添加maven依赖</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Excel导出操作"><a href="#Excel导出操作" class="headerlink" title="Excel导出操作"></a>Excel导出操作</h2><h3 id="创建Workbook和Sheet"><a href="#创建Workbook和Sheet" class="headerlink" title="创建Workbook和Sheet"></a><strong>创建Workbook和Sheet</strong></h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">excelExport</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 生成工作簿</span>    HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建sheet页</span>    HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token comment" spellcheck="true">// 生成excel文件流</span>    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/binary;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;fileName="</span> <span class="token operator">+</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"账务明细导出"</span> <span class="token operator">+</span> <span class="token string">".xls"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><a id="more"></a><h3 id="创建单元格"><a href="#创建单元格" class="headerlink" title="创建单元格"></a><strong>创建单元格</strong></h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 标题行</span>HSSFRow titleRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建行,从0开始</span>HSSFCell cell <span class="token operator">=</span> titleRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建行的单元格,也是从0开始</span>titleRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"账务表"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>titleRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"汇总编码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>titleRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"汇总编码生成状态"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置单元格样式"><a href="#设置单元格样式" class="headerlink" title="设置单元格样式"></a><strong>设置单元格样式</strong></h3><pre class="line-numbers language-java"><code class="language-java">HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 水平对齐方式</span>style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//水平居中</span>style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//垂直居中</span>style<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//自动换行</span>style<span class="token punctuation">.</span><span class="token function">setIndention</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//缩进</span>style<span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//文本旋转，这里的取值是从-90到90，而不是0-180度</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置边框"><a href="#设置边框" class="headerlink" title="设置边框"></a>设置边框</h4><p>​    边框和其他单元格设置一样也是调用CellStyle接口，CellStyle有2种和边框相关的属性，分别是:</p><table><thead><tr><th>边框相关属性</th><th>说明</th><th>范例</th></tr></thead><tbody><tr><td>Border+ 方向</td><td>边框类型</td><td>BorderLeft, BorderRight</td></tr><tr><td>方向 +BorderColor</td><td>边框颜色</td><td>TopBorderColor,BottomBorderColor</td></tr></tbody></table><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//设置边框</span>style<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>BORDER_DOTTED<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上边框</span>style<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>BORDER_THICK<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//下边框</span>style<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>BORDER_DOUBLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左边框</span>style<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>BORDER_SLANTED_DASH_DOT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右边框</span>style<span class="token punctuation">.</span><span class="token function">setTopBorderColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>RED<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上边框颜色</span>style<span class="token punctuation">.</span><span class="token function">setBottomBorderColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>BLUE<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//下边框颜色</span>style<span class="token punctuation">.</span><span class="token function">setLeftBorderColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>GREEN<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左边框颜色</span>style<span class="token punctuation">.</span><span class="token function">setRightBorderColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>PINK<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右边框颜色</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 设置字体</span>Font titleFont <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>titleFont<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"Calibra"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体名称</span>titleFont<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字号</span>font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>RED<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体颜色</span>font<span class="token punctuation">.</span><span class="token function">setUnderline</span><span class="token punctuation">(</span>FontFormatting<span class="token punctuation">.</span>U_SINGLE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置下划线</span>font<span class="token punctuation">.</span><span class="token function">setTypeOffset</span><span class="token punctuation">(</span>FontFormatting<span class="token punctuation">.</span>SS_SUPER<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置上标下标</span>font<span class="token punctuation">.</span><span class="token function">setStrikeout</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置删除线</span>titleFont<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否加粗</span>titleStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>titleFont<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置背景和纹理"><a href="#设置背景和纹理" class="headerlink" title="设置背景和纹理"></a>设置背景和纹理</h4><pre class="line-numbers language-java"><code class="language-java">style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>GREY_25_PERCENT<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置图案颜色</span>style<span class="token punctuation">.</span><span class="token function">setFillBackgroundColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>RED<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置图案背景色</span>style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置图案样式</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置宽度和高度"><a href="#设置宽度和高度" class="headerlink" title="设置宽度和高度"></a><strong>设置宽度和高度</strong></h4><pre class="line-numbers language-java"><code class="language-java">sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">31</span> <span class="token operator">*</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置第一列的宽度是31个字符宽度</span>titleRow<span class="token punctuation">.</span><span class="token function">setHeightInPoints</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置行的高度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a><strong>合并单元格</strong></h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//合并列</span>HSSFCell cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"合并列"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CellRangeAddress region<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span>region<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//合并行</span>cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"合并行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>region<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span>region<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>CellRangeAddress</code>对象其实就是表示一个区域，其构造方法如下：<code>CellRangeAddress(firstRow, lastRow, firstCol, lastCol)</code>，参数的说明:</p><ul><li><code>firstRow</code>： 区域中第一个单元格的行号</li><li><code>lastRow</code>：区域中最后一个单元格的行号</li><li><code>firstCol</code>： 区域中第一个单元格的列号</li><li><code>lastCol</code>： 区域中最后一个单元格的列号</li></ul><h3 id="设置数据格式"><a href="#设置数据格式" class="headerlink" title="设置数据格式"></a><strong>设置数据格式</strong></h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//设置日期格式  --使用Excel内嵌的格式</span>HSSFCell cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>HSSFCellStyle style<span class="token operator">=</span>workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>HSSFDataFormat<span class="token punctuation">.</span><span class="token function">getBuiltinFormat</span><span class="token punctuation">(</span><span class="token string">"m/d/yy h:mm"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置保留2位小数  --使用Excel内嵌的格式</span>cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">12.3456789</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token operator">=</span>workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>HSSFDataFormat<span class="token punctuation">.</span><span class="token function">getBuiltinFormat</span><span class="token punctuation">(</span><span class="token string">"0.00"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置货币格式  --使用自定义的格式</span>cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">12345.6789</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token operator">=</span>workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>workbook<span class="token punctuation">.</span><span class="token function">createDataFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token string">"￥#,##0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置百分比格式  --使用自定义的格式</span>cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">0.123456789</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token operator">=</span>workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>workbook<span class="token punctuation">.</span><span class="token function">createDataFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token string">"0.00%"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置中文大写格式  --使用自定义的格式</span>cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token operator">=</span>workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>workbook<span class="token punctuation">.</span><span class="token function">createDataFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token string">"[DbNum2][$-804]0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置科学计数法格式  --使用自定义的格式</span>cell<span class="token operator">=</span>row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token operator">=</span>workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token punctuation">.</span><span class="token function">setDataFormat</span><span class="token punctuation">(</span>workbook<span class="token punctuation">.</span><span class="token function">createDataFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token string">"0.00E+00"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​    对于一些比较复杂的排版样式的excel导出，其实就是对单个单元格的排版布局，通过设置单元格的位置、合并单元格来实现。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis转义字符（xml转义写法）</title>
      <link href="2019/11/19/mybatis-zhuan-yi-zi-fu-xml-zhuan-yi-xie-fa/"/>
      <url>2019/11/19/mybatis-zhuan-yi-zi-fu-xml-zhuan-yi-xie-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="Mybatis转义字符（xml转义写法）"><a href="#Mybatis转义字符（xml转义写法）" class="headerlink" title="Mybatis转义字符（xml转义写法）"></a>Mybatis转义字符（xml转义写法）</h2><table><thead><tr><th align="center">字符</th><th align="center">转义</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">&lt;</td><td align="center"></td><td>&amp;lt;</td><td align="center">小于</td></tr><tr><td align="center">&lt;=</td><td align="center"></td><td>&amp;lt;=</td><td align="center">小于等于</td></tr><tr><td align="center">&gt;</td><td align="center"></td><td>&amp;gt;</td><td align="center">大于</td></tr><tr><td align="center">&gt;=</td><td align="center"></td><td>&amp;gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">&lt;&gt;</td><td align="center"></td><td>&amp;lt;&amp;gt;</td><td align="center">不等于</td></tr><tr><td align="center">&amp;</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">‘</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">“</td><td align="center"></td><td align="center"></td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中BigDecimal的用法</title>
      <link href="2019/10/25/java-zhong-bigdecimal-de-yong-fa/"/>
      <url>2019/10/25/java-zhong-bigdecimal-de-yong-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><p> <code>BigDecimal</code>可以表示一个任意大小且精度完全准确的浮点数 </p><pre class="line-numbers language-java"><code class="language-java">BigDecimal bd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.4567"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">priyonntln</span><span class="token punctuation">(</span>bd<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>bd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 15241.55677489</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p> <code>BigDecimal</code>用<code>scale()</code>表示小数位数，例如： </p><pre class="line-numbers language-java"><code class="language-java">BigDecimal d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.45"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.4500"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"1234500"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2,两位小数</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d2<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d3<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <a id="more"></a><p>通过<code>BigDecimal</code>的<code>stripTrailingZeros()</code>方法，可以将一个<code>BigDecimal</code>格式化为一个相等的，但去掉了末尾0的<code>BigDecimal</code>： </p><pre class="line-numbers language-java"><code class="language-java">BigDecimal d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.4500"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d2 <span class="token operator">=</span> d1<span class="token punctuation">.</span><span class="token function">stripTrailingZeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d2<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2,因为去掉了00</span>BigDecimal d3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"1234500"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d4 <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">stripTrailingZeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d3<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d4<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// -2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 如果一个<code>BigDecimal</code>的<code>scale()</code>返回负数，例如，<code>-2</code>，表示这个数是个整数，并且末尾有2个0。 </p><p> 可以对一个<code>BigDecimal</code>设置它的<code>scale</code>，如果精度比原始值低，那么按照指定的方法进行四舍五入或者直接截断： </p><pre class="line-numbers language-java"><code class="language-java">BigDecimal d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.456789"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d2 <span class="token operator">=</span> d1<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> RoundingMode<span class="token punctuation">.</span>HALF_UP<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 四舍五入，123.4568</span>BigDecimal d3 <span class="token operator">=</span> d1<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> RoundingMode<span class="token punctuation">.</span>DOWN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 直接截断，123.4567</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><p>1.<strong>加法 add()</strong>             2.<strong>减法subtract()</strong>              3.<strong>乘法multiply()</strong>  </p><p>4.<strong>除法divide()</strong>          5.<strong>绝对值abs()</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//加法</span>BigDecimal result1 <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal result12 <span class="token operator">=</span> num12<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//减法</span>BigDecimal result2 <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal result22 <span class="token operator">=</span> num12<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>num22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//乘法</span>BigDecimal result3 <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal result32 <span class="token operator">=</span> num12<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>num22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//绝对值</span>BigDecimal result4 <span class="token operator">=</span> num3<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal result42 <span class="token operator">=</span> num32<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//除法</span>BigDecimal result5 <span class="token operator">=</span> num2<span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>BigDecimal<span class="token punctuation">.</span>ROUND_HALF_UP<span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal result52 <span class="token operator">=</span> num22<span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span>num12<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>BigDecimal<span class="token punctuation">.</span>ROUND_HALF_UP<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 对<code>BigDecimal</code>做加、减、乘时，精度不会丢失，但是做除法时，存在无法除尽的情况，这时，就必须指定精度以及如何进行截断： </p><pre class="line-numbers language-java"><code class="language-java">BigDecimal d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"23.456789"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d3 <span class="token operator">=</span> d1<span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span>d2<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> RoundingMode<span class="token punctuation">.</span>HALF_UP<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 保留10位小数并四舍五入</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><p>在比较两个<code>BigDecimal</code>的值是否相等时，要特别注意，使用<code>equals()</code>方法不但要求两个<code>BigDecimal</code>的值相等，还要求它们的<code>scale()</code>相等： </p><pre class="line-numbers language-java"><code class="language-java">BigDecimal d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"123.45600"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// false,因为scale不同</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d2<span class="token punctuation">.</span><span class="token function">stripTrailingZeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// true,因为d2去除尾部0后scale变为2</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 必须使用<code>compareTo()</code>方法来比较，它根据两个值的大小分别返回负数、正数和<code>0</code>，分别表示小于、大于和等于。 </p> <p style="color:red;font-weight:bold;"> 总是使用compareTo()比较两个BigDecimal的值，不要使用equals()！ </p> 如果查看`BigDecimal`的源码，可以发现，实际上一个`BigDecimal`是通过一个`BigInteger`和一个`scale`来表示的，即`BigInteger`表示一个完整的整数，而`scale`表示小数位数： <pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BigDecimal</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token operator">&lt;</span>BigDecimal<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> BigInteger intVal<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> scale<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> <code>BigDecimal</code>也是从<code>Number</code>继承的，也是不可变对象。 </p><h2 id="判段"><a href="#判段" class="headerlink" title="判段"></a>判段</h2><h3 id="判断一个BigDecimal是否为负数"><a href="#判断一个BigDecimal是否为负数" class="headerlink" title="判断一个BigDecimal是否为负数"></a>判断一个<code>BigDecimal</code>是否为负数</h3><pre class="line-numbers language-java"><code class="language-java">BigDecimal bigDecimal <span class="token operator">=</span> bprocurementOrderPojo<span class="token punctuation">.</span><span class="token function">getPayableFee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> num <span class="token operator">=</span> bigDecimal<span class="token punctuation">.</span><span class="token function">signum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p> num是 -1, 0, 1，分别表示 负数、零、正数 </p><h3 id="和0比较"><a href="#和0比较" class="headerlink" title="和0比较"></a>和0比较</h3><pre class="line-numbers language-java"><code class="language-java">paymentLogVo<span class="token punctuation">.</span><span class="token function">getRebateAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>BigDecimal<span class="token punctuation">.</span>ZERO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//是否等于0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> r<span class="token operator">=</span>big_decimal<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>BigDecimal<span class="token punctuation">.</span>ZERO<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//和0，ZERO比较</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//等于</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//大于</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//小于</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><ol><li><code>BigDecimal</code>用于表示精确的小数，常用于财务计算； </li><li>比较<code>BigDecimal</code>的值是否相等，必须使用<code>compareTo()</code>而不能使用<code>equals()</code>。 </li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
